{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample VPC Template",
  "Parameters": {
    "VPCCIDR": {
      "Description": "CIDR block for network",
      "Type": "String",
      "Default": "10.10.8.0/22"
    },
    "PublicSubnetsCIDR": {
      "Description": "CIDR blocks for public subnets",
      "Type": "CommaDelimitedList",
      "Default": "10.10.10.0/27, 10.10.10.32/27, 10.10.10.64/27"
    },
    "PrivateSubnetsCIDR": {
      "Description": "CIDR blocks for private subnets",
      "Type": "CommaDelimitedList",
      "Default": "10.10.10.96/27, 10.10.10.128/27, 10.10.10.160/27"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {"Ref" : "VPCCIDR"},
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Sample-VPC"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Internet Gateway"
          }
        ]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {"Ref" : "InternetGateway"},
        "VpcId": {"Ref": "VPC"}
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value":
                "Public Subnet Route Table"
          }
        ]
      }
    },
    "AccessToInternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref":"InternetGateway"},
        "RouteTableId": {"Ref":"PublicRouteTable"}
      }
    },
    "PublicSubnetNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet Network ACL"
          }
        ]
      }
    },
    "PublicNetworkACLEntryInboundHTTP": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {"Ref" : "PublicSubnetNetworkAcl"},
        "PortRange": {
          "From": 80,
          "To": 80
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 100
      }
    },
    "PublicNetworkACLEntryInboundHTTPS": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {"Ref" : "PublicSubnetNetworkAcl"},
        "PortRange": {
          "From": 443,
          "To": 443
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 200
      }
    },
    "PublicNetworkACLEntryInboundSSH": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {"Ref" : "PublicSubnetNetworkAcl"},
        "PortRange": {
          "From": 22,
          "To": 22
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 300
      }
    },
    "PublicNetworkACLEntryInboundEphemeralPorts": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {"Ref" : "PublicSubnetNetworkAcl"},
        "PortRange": {
          "From": 1024,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 400
      }
    },
    "PublicNetworkACLEntryOutboundAllTraffic": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {"Ref": "PublicSubnetNetworkAcl"},
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 100
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "0", {"Ref" : "PublicSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref":"VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet - 1"
          }
        ]
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "SubnetId": {"Ref":"PublicSubnet1"}
      }
    },
    "PublicSubnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1"},
        "NetworkAclId": {"Ref":"PublicSubnetNetworkAcl"}
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "1", {"Ref" : "PublicSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref":"VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet - 2"
          }
        ]
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "SubnetId": {"Ref":"PublicSubnet2"}
      }
    },
    "PublicSubnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2"},
        "NetworkAclId": {"Ref":"PublicSubnetNetworkAcl"}
      }
    },
    "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "2", {"Ref" : "PublicSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref":"VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet - 3"
          }
        ]
      }
    },
    "PublicSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "SubnetId": {"Ref":"PublicSubnet3"}
      }
    },
    "PublicSubnet3NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet3"},
        "NetworkAclId": {"Ref":"PublicSubnetNetworkAcl"}
      }
    },
    "ElasticIP": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref": "NATInstance"}
      }
    },
    "NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for NAT instance",
        "VpcId": {"Ref": "VPC"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": {"Ref":"VPCCIDR"},
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": {"Ref":"VPCCIDR"},
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT-SecurityGroup"
          }
        ]
      }
    },
    "NATInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": "test",
        "SubnetId": { "Ref" : "PublicSubnet1" },
        "SourceDestCheck": "false",
        "ImageId": "ami-162c0c75",
        "SecurityGroupIds": [{"Ref": "NATSecurityGroup"}],
        "Tags": [{
            "Key": "Name",
            "Value": "NAT"
          }
        ]
      }
    },
    "PrivateSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [

          {
            "Key": "Name",
            "Value": "Private Subnet Route Table"
          }
        ]
      }
    },
    "PrivateSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {"Ref": "NATInstance"},
        "RouteTableId": {"Ref":"PrivateSubnetRouteTable"}
      }
    },
    "PrivateSubnetNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet Network ACL"
          }
        ]
      }
    },
    "PrivateNetworkACLEntryInbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {"Ref": "PrivateSubnetNetworkAcl"},
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 101
      }
    },
    "PrivateNetworkACLEntryOutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {"Ref": "PrivateSubnetNetworkAcl"},
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 150
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "0", {"Ref" : "PrivateSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref" : "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet - 1"
          }
        ]
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref" : "PrivateSubnetRouteTable"},
        "SubnetId": {"Ref": "PrivateSubnet1"}
      }
    },
    "PrivateSubnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref":"PrivateSubnet1"},
        "NetworkAclId": {"Ref":"PrivateSubnetNetworkAcl"}
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "1", {"Ref" : "PrivateSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref" : "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet - 2"
          }
        ]
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref" : "PrivateSubnetRouteTable"},
        "SubnetId": {"Ref": "PrivateSubnet2"}
      }
    },
    "PrivateSubnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref":"PrivateSubnet2"},
        "NetworkAclId": {"Ref":"PrivateSubnetNetworkAcl"}
      }
    },
    "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]},
        "CidrBlock": { "Fn::Select" : [ "2", {"Ref" : "PrivateSubnetsCIDR"} ] },
        "MapPublicIpOnLaunch": false,
        "VpcId": {"Ref" : "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet - 3"
          }
        ]
      }
    },
    "PrivateSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref" : "PrivateSubnetRouteTable"},
        "SubnetId": {"Ref": "PrivateSubnet3"}
      }
    },
    "PrivateSubnet3NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref":"PrivateSubnet3"},
        "NetworkAclId": {"Ref":"PrivateSubnetNetworkAcl"}
      }
    },
  },
  "Outputs": {
    "VPCID" : {
      "Description" : "VPC ID",
      "Value" :  { "Ref" : "VPC" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VPCID" }}
    },
    "PublicSubnet1" : {
      "Description" : "Public SubnetID 1",
      "Value" :  { "Ref" : "PublicSubnet1" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicSubnetID-1" }}
    },
    "PublicSubnet2" : {
      "Description" : "Public SubnetID 2",
      "Value" :  { "Ref" : "PublicSubnet2" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicSubnetID-2" }}
    },
    "PublicSubnet3" : {
      "Description" : "Public SubnetID 3",
      "Value" :  { "Ref" : "PublicSubnet3" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicSubnetID-3" }}
    },
    "PrivateSubnet1" : {
      "Description" : "Private SubnetID 1",
      "Value" :  { "Ref" : "PrivateSubnet1" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnetID-1" }}
    },
    "PrivateSubnet2" : {
      "Description" : "Private SubnetID 2",
      "Value" :  { "Ref" : "PrivateSubnet2" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnetID-2" }}
    },
    "PrivateSubnet3" : {
      "Description" : "Private SubnetID 3",
      "Value" :  { "Ref" : "PrivateSubnet3" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnetID-3" }}
    },
    "VPCCIDR" : {
      "Description" : "VPC CIDR",
      "Value" :  { "Fn::GetAtt" : [ "VPC", "CidrBlock" ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VPCCIDR" }}
    },
    "PublicSubnetCIDR1" : {
      "Description" : "Public Subnet 1 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "0", {"Ref" : "PublicSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubCIDR1" }}
    },
    "PublicSubnetCIDR2" : {
      "Description" : "Public Subnet 2 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "1", {"Ref" : "PublicSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubCIDR2" }}
    },
    "PublicSubnetCIDR3" : {
      "Description" : "Public Subnet 3 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "2", {"Ref" : "PublicSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubCIDR3" }}
    },
    "PrivateSubnetCIDR1" : {
      "Description" : "Private Subnet 1 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "0", {"Ref" : "PrivateSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateCIDR1" }}
    },
    "PrivateSubnetCIDR2" : {
      "Description" : "Private Subnet 2 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "1", {"Ref" : "PrivateSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateCIDR2" }}
    },
    "PrivateSubnetCIDR1" : {
      "Description" : "Private Subnet 3 CIDR Ranges",
      "Value" :  { "Fn::Select" : [ "2", {"Ref" : "PrivateSubnetsCIDR"} ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateCIDR3" }}
    },
  }
}
